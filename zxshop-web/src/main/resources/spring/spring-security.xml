<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/security  
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<sec:http pattern="/login.jsp" security="none"></sec:http>
	<sec:http pattern="/user/login" security="none"></sec:http>

	<sec:http auto-config="true" access-denied-page="/user/unAccess">

		<sec:form-login login-page="/user/unlogin" />
		<sec:session-management>
			<sec:concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" />
		</sec:session-management>

		<sec:custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</sec:http>
	<!--一个自定义的filter，必须包含 authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<bean id="myFilter" class="me.gacl.service.MyFilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>
	<!--验证配置，认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="myUserDetailService">
			<!--如果用户的密码采用加密的话 <password-encoder hash="md5" /> -->
		</sec:authentication-provider>
	</sec:authentication-manager>
	<!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
	<bean id="myUserDetailService" class="me.gacl.service.MyUserDetailService" />
	<!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<bean id="myAccessDecisionManagerBean" class="me.gacl.service.MyAccessDecisionManager">
	</bean>
	<!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<bean id="securityMetadataSource" class="me.gacl.service.MyInvocationSecurityMetadataSource" />
</beans>  